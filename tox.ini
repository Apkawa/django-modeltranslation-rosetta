[tox]
minversion = 2.3
skip_missing_interpreters = true
envlist =
    py3{8,9}-django42
    py3{10,11,12,13}-django{42,50,51}

setenv =
    PYTHONPATH = {toxinidir}:{toxinidir}
    APP_NAME = modeltranslation_rosetta

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py311
    3.13: py311
    pypy-3.10: pypy3

[testenv]
changedir = {toxinidir}
deps =
    -r{toxinidir}/requirements-dev.txt

    django42: Django>=4.2,<4.3
    django50: Django>=5.0,<5.1
    django51: Django>=5.1,<5.2
    django52: Django>=5.2,<5.3
    django60: Django>=6.0,<6.1
    django61: Django>=6.1,<6.2
    django62: Django>=6.2,<6.3
    django-dev: https://github.com/django/django/archive/master.tar.gz#egg=django
commands =
    py.test  --basetemp={envtmpdir} -v {env:COVERAGE_ARGS:}
setenv =
    {[tox]setenv}
    coverage: COVERAGE_ARGS=--basetemp={envtmpdir} -v --cov {env:APP_NAME} --cov-report term-missing {posargs}

[testenv:frontend]
allowlist_externals = npm
setenv = NODE_OPTIONS=--openssl-legacy-provider
changedir = {toxinidir}
description = build frontend
commands =
    npm install
    npm run build
deps =

[testenv:flake8]
description = flake8
commands = flake8 {env:APP_NAME}
deps = flake8
setenv =
    {[tox]setenv}

[testenv:pylint]
description = pylint
commands = pylint --django-settings-module=tests.settings  {env:APP_NAME}
deps =
    pylint
    pylint-pytest
    pylint-common
    pylint-django

[testenv:mypy]
description = type check
commands =
    python -m mypy -p {env:APP_NAME}
deps = {[testenv]deps}
       django-stubs
       types-pytz
       lxml-stubs
       types-six
       types-openpyxl
       types-python-dateutil
       mypy>=0.901

setenv =
    {[tox]setenv}

[testenv:docs]
deps=
    -r{toxinidir}/requirements-dev.txt
commands=python setup.py build_sphinx
